{"version":3,"sources":["LabInfoTable/index.js","LabInfo/index.js","Foot/index.js","CurAvail/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","timeSlots_","LabInfoTable","props","idx","TimeSlot","monday","tuesday","wednesday","thursday","friday","reserver","classes","rows","i","length","time","mon","tues","wed","thurs","fri","push","TableContainer","component","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","backgroundColor","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","padding","spacing","MuiExpansionPanelDetails","LabInfo","panel","room","React","useState","setExpanded","square","onChange","event","newExpanded","aria-controls","id","Typography","variant","Foot","href","bullet","transform","title","fontSize","pos","getDay","day","Date","getHourRange","hour","getHours","console","log","CurAvail","BA2200","BA3175","BA3185","BA3195","freeLabs","Card","CardContent","color","gutterBottom","toTimeString","label","App","BA2200ReservedBy","data","BA3175ReservedBy","BA3185ReservedBy","BA3195ReservedBy","document","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de52980f.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport './styles.css';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction createRow(idx, TimeSlot, monday,\n                   tuesday, wednesday, thursday,\n                   friday) {\n    return {\n        idx, TimeSlot, monday,\n        tuesday, wednesday, thursday,\n        friday\n    };\n}\n\nconst timeSlots_ = [\n    '08:10 - 09:00',\n    '09:10 - 10:00',\n    '10:10 - 11:00',\n    '11:10 - 12:00',\n    '12:10 - 13:00',\n    '13:10 - 14:00',\n    '14:10 - 15:00',\n    '15:10 - 16:00',\n    '16:10 - 17:00',\n    '17:10 - 18:00',\n    '18:10 - 19:00',\n    '19:10 - 20:00',\n    '20:10 - 21:00',\n    '21:10 - 22:00'\n];\n\nexport default function LabInfoTable(props) {\n    const {reserver} = props;\n    const classes = useStyles();\n    const rows = [];\n    for (let i = 0; i < timeSlots_.length; i++) {\n        const time = timeSlots_[i];\n        const mon = reserver.monday;\n        const tues = reserver.tuesday;\n        const wed = reserver.wednesday;\n        const thurs = reserver.thursday;\n        const fri = reserver.friday;\n        rows.push(createRow(i, time, mon[time], tues[time],\n            wed[time], thurs[time], fri[time]))\n    }\n\n    return (\n        <TableContainer component={Paper} className={\"MainTable\"}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Time Slot</TableCell>\n                        <TableCell className={\"tbCell\"} align=\"center\">Monday</TableCell>\n                        <TableCell className={\"tbCell\"} align=\"center\">Tuesday</TableCell>\n                        <TableCell className={\"tbCell\"} align=\"center\">Wednesday</TableCell>\n                        <TableCell className={\"tbCell\"} align=\"center\">Thursday</TableCell>\n                        <TableCell className={\"tbCell\"} align=\"center\">Friday</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.idx}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.TimeSlot}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.monday}</TableCell>\n                            <TableCell align=\"center\">{row.tuesday}</TableCell>\n                            <TableCell align=\"center\">{row.wednesday}</TableCell>\n                            <TableCell align=\"center\">{row.thursday}</TableCell>\n                            <TableCell align=\"center\">{row.friday}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}","import React from \"react\";\nimport {withStyles} from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport LabInfoTable from \"../LabInfoTable\";\nimport './styles.css';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        align: 'center',\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {align: 'center',},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function LabInfo(props) {\n    const {room, reserver} = props;\n\n    const [expanded, setExpanded] = React.useState('BA2200');\n\n    const handleChange = panel => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <ExpansionPanel square={false}\n                            expanded={expanded === room}\n                            onChange={handleChange(room)}>\n\n                <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n                    <Typography align={\"center\"} variant={\"h5\"}>{room}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <LabInfoTable reserver={reserver}/>\n                </ExpansionPanelDetails>\n\n            </ExpansionPanel>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function Foot() {\n    return (\n        <div className={\"FootDiv\"}>\n            <p align={\"center\"}>\n                Not affiliated with the University of Toronto.\n            </p>\n            <p align={\"center\"}>\n                By Tingfeng Xia, released under the Unlicense.\n            </p>\n            <p align={\"center\"}>\n                Github: <a href={\"https://github.com/tingfengx/bahenfreelabs/\"}>https://github.com/tingfengx/bahenfreelabs/</a>\n            </p>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nfunction getDay() {\n    const day = new Date().getDay();\n    if (day === 1) {\n        return 'monday'\n    } else if (day === 2) {\n        return 'tuesday'\n    } else if (day === 3) {\n        return 'wednesday'\n    } else if (day === 4) {\n        return 'thursday'\n    } else if (day === 5) {\n        return 'monday'\n    } else {\n        return 'weekend'\n    }\n}\n\nconst timeSlots_ = [\n    '08:10 - 09:00',\n    '09:10 - 10:00',\n    '10:10 - 11:00',\n    '11:10 - 12:00',\n    '12:10 - 13:00',\n    '13:10 - 14:00',\n    '14:10 - 15:00',\n    '15:10 - 16:00',\n    '16:10 - 17:00',\n    '17:10 - 18:00',\n    '18:10 - 19:00',\n    '19:10 - 20:00',\n    '20:10 - 21:00',\n    '21:10 - 22:00'\n];\n\n// if it is now 8.30, then hour = 8, want to return 0 in this case\nfunction getHourRange() {\n    const hour = new Date().getHours();\n    console.log(hour);\n    if (hour < 22 && hour >= 8){\n        return timeSlots_[hour - 8];\n    } else {\n        return 'night';\n    }\n}\n\nexport default function CurAvail(props) {\n    const classes = useStyles();\n    const { BA2200, BA3175, BA3185, BA3195 } = props;\n\n    let freeLabs = [\n        \"BA2210\",\n        \"BA2220\",\n        \"BA2240\",\n        \"BA2270\",\n        \"BA3200\"\n    ];\n\n    console.log(getDay(), getHourRange());\n    if (getDay() === 'weekend' || getHourRange() === 'night') {\n        freeLabs.push(\"BA2200\"); freeLabs.push(\"BA3175\");\n        freeLabs.push(\"BA3185\"); freeLabs.push(\"BA3195\");\n    } else {\n        if (BA2200[getDay()][getHourRange()] === \"\") {\n            freeLabs.push(\"BA2200\");\n        }\n        if (BA3175[getDay()][getHourRange()] === \"\") {\n            freeLabs.push(\"BA3175\");\n        }\n        if (BA3185[getDay()][getHourRange()] === \"\") {\n            freeLabs.push(\"BA3185\");\n        }\n        if (BA3195[getDay()][getHourRange()] === \"\") {\n            freeLabs.push(\"BA3195\");\n        }\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                    Last queried time: {new Date().toTimeString()}\n                </Typography>\n                <Typography variant=\"h3\" color=\"textPrimary\" gutterBottom>\n                    Current Available Labs:\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\n                    {\n                        freeLabs.map(function (label) {\n                            return <span key={label}>{label + \"  \"}</span>\n                        })\n                    }\n                </Typography>\n            </CardContent>\n\n        </Card>\n    );\n}","import React from 'react';\nimport './App.css';\nimport LabInfo from \"./LabInfo\";\nimport Foot from \"./Foot\";\nimport CurAvail from \"./CurAvail\";\nimport data from \"./Data/data\"\n\nclass App extends React.Component {\n    BA2200ReservedBy = data.BA2200ReservedBy;\n    BA3175ReservedBy = data.BA3175ReservedBy;\n    BA3185ReservedBy = data.BA3185ReservedBy;\n    BA3195ReservedBy = data.BA3195ReservedBy;\n    render() {\n        document.title = \"Bahen Free Labs\";\n        return (\n            <div>\n                <CurAvail BA2200={this.BA2200ReservedBy}\n                          BA3175={this.BA3175ReservedBy}\n                          BA3185={this.BA3185ReservedBy}\n                          BA3195={this.BA3195ReservedBy}/>\n                <LabInfo room={\"BA2200\"} reserver={this.BA2200ReservedBy}/>\n                <LabInfo room={\"BA3175\"} reserver={this.BA3175ReservedBy}/>\n                <LabInfo room={\"BA3185\"} reserver={this.BA3185ReservedBy}/>\n                <LabInfo room={\"BA3195\"} reserver={this.BA3195ReservedBy}/>\n                <Foot/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}